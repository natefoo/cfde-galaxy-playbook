---

# Always restart PostgreSQL on exit
galaxy_db_servers_group_systemd_overrides:
  - name: "postgresql-{{ __postgresql_version_dotless }}"
    override:
      Restart: "always"

postgresql_objects_users:
  - name: "{{ galaxy_user }}"

postgresql_objects_databases:
  - name: "galaxy_{{ galaxy_instance_codename }}"
    owner: "{{ galaxy_user }}"

galaxy_db_servers_group_groups:
  - "{{ local_groups.postgres }}"
  # This is necessary for proper quota usage on Corral
  - "{{ local_groups.G_827737 }}"

galaxy_db_servers_group_users:
  - "{{ local_users.postgres }}"

postgresql_version: 17
postgresql_create_backup_dir: false
postgresql_backup_dir: "{{ corral_root }}/backup/pgsql/{{ galaxy_instance_codename }}"

postgresql_archive_wal_rsync_args: '--ignore-existing -pt --info=skip1'
#postgresql_backup_rsync_backup_opts: '-rpt --chown=postgres:{{ galaxy_group }}'
#postgresql_backup_hour: 7
## sg is necessary because rsync copies with the default group and then performs a chown, which doesn't work for the way
## quotas are calculated on Corral 4.
postgresql_backup_command: >-
  /usr/bin/sg {{ galaxy_group }} -c
  "{{ postgresql_backup_local_dir | quote }}/bin/backup.py
  {{ '--rsync-connect-opts ' ~ (postgresql_backup_rsync_connect_opts | quote) if postgresql_backup_rsync_connect_opts else '' }}
  --rsync-backup-opts {{ postgresql_backup_rsync_backup_opts | quote }}
  --keep {{ postgresql_backup_keep | quote }}
  {{ '--pg-bin-dir ' ~ __postgresql_pgdg_bin_dir if ansible_os_family == 'RedHat' else '' }}
  --backup --clean-archive {{ postgresql_backup_dir | quote }}"

postgresql_conf:
  temp_buffers: 64MB
  max_prepared_transactions: 100
  log_checkpoints: "on"

  # DB Version: 17
  # # OS Type: linux
  # # DB Type: mixed
  # # Total Memory (RAM): 8 GB
  # # CPUs num: 2
  # # Connections num: 50
  # # Data Storage: san
  max_connections: 50
  shared_buffers: 2GB
  effective_cache_size: 6GB
  maintenance_work_mem: 512MB
  checkpoint_completion_target: 0.9
  wal_buffers: 16MB
  default_statistics_target: 100
  random_page_cost: 1.1
  effective_io_concurrency: 300
  work_mem: 10485kB
  huge_pages: 'off'
  min_wal_size: 1GB
  max_wal_size: 4GB

gxadmin_dir: /usr/local/lib/gxadmin
gxadmin_bin_dir: /usr/local/bin
