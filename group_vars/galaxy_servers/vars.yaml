---

# Conda
#miniconda_prefix: "{{ galaxy_instance_root }}/conda"
##miniconda_version: 4.10.3
#miniconda_channels:
#  - conda-forge
#miniconda_conda_environments:
#  __python@3.12:
#    packages:
#      - python=3.12

slurm_drmaa_rpm_url: https://github.com/natefoo/slurm-drmaa/releases/download/1.1.4/slurm-drmaa-1.1.4-22.05.el9.x86_64.rpm

# Galaxy
#galaxy_create_user: false
galaxy_separate_privileges: true
#galaxy_manage_paths: false
galaxy_layout: root-dir
galaxy_root: "{{ galaxy_local_root }}"
galaxy_tus_upload_store: "{{ galaxy_shared_rw_root }}/upload"

galaxy_mutable_config_backup_dir: "files/galaxy/var/{{ galaxy_instance_codename }}"

# This is used by the nginx template and have to be set since the nginx role doesn't run in the same playbook/after the galaxy role
galaxy_server_dir: "{{ galaxy_local_ro_root }}/server"
# TODO: These should't need to be set if the role can be used to manage paths instead of doing it as a pre-task in the deps playbook
#galaxy_config_dir: "{{ galaxy_root }}/config"
#galaxy_mutable_config_dir: "{{ galaxy_root }}/var/config"
#galaxy_log_dir: "{{ galaxy_root }}/var/log"
#galaxy_reports_config_file: "{{ galaxy_config_dir }}/reports.yml"

galaxy_config_gunicorn_bind: localhost:8080
galaxy_config_file_path: "{{ galaxy_shared_rw_root }}/objects"

#galaxy_tmpclean_dirs:
#  - "{{ galaxy_job_working_directory }}"
#  - "{{ galaxy_config.galaxy.new_file_path | default((galaxy_mutable_data_dir, 'tmp') | path_join) }}"
#  - "{{ galaxy_tus_upload_store }}"

# Run Galaxy with Gravity
galaxy_systemd_mode: gravity

# tus is run from gravity
tusd_systemd: false

# used by nginx template
galaxy_tusd_port: 1080

#galaxy_precreate_dirs:
#  - "{{ galaxy_config_dir }}"
#  - "{{ galaxy_mutable_config_dir }}"
#  - "{{ galaxy_log_dir }}"
#  # Does not need to be precreated but this ensures its permissions do not allow world reading
#  - "{{ galaxy_instance_root }}/objects"
#  - "{{ galaxy_tus_upload_store }}"

# TODO: https://github.com/galaxyproject/ansible-galaxy/issues/137
#__galaxy_user_group: "{{ galaxy_instance_group }}"

galaxy_force_checkout: true

#galaxy_virtualenv_command: "{{ miniconda_prefix }}/envs/__python@3.9/bin/python3 -m venv"
galaxy_venv_dir: "{{ galaxy_local_ro_root }}/venv"
pip_extra_args: "--extra-index-url https://wheels.galaxyproject.org/"

tpv_config_dir: "{{ galaxy_config_dir }}/tpv"
galaxy_extra_local_ro_dirs:
  - "{{ tpv_config_dir }}"

#galaxy_job_metrics_plugins:
#  - type: core
#  - type: cpuinfo
#  - type: meminfo
#  - type: uname
#  - type: cgroup
#  - type: hostname

# Used by the job_conf.yml template
galaxy_job_conf_singularity_volumes:
  local:
    - "$tool_directory:ro"
    - "$working_directory:rw"
    - "$job_directory:rw"
    - "$default_file_path:ro"
    #- "{{ job_execution_venv }}:ro"
    - "/cvmfs/data.galaxyproject.org:ro"
  ls6:
    - "$job_directory:ro"
    - "$tool_directory:ro"
    - "$job_directory/outputs:rw"
    - "$job_directory/tmp:rw"
    - "$job_directory/home:rw"
    - "$working_directory:rw"
    - "$default_file_path:ro"
    - "/cvmfs/data.galaxyproject.org:ro"
    - "/tmp:/tmp:rw"
    - "/tmp:/var/tmp:rw"

galaxy_job_conf_singularity_default_container_id: /cvmfs/main.galaxyproject.org/singularity/rockylinux:9.5.20241118--0

galaxy_config_templates:
  - src: templates/galaxy/config/job_conf.yml.j2
    dest: "{{ galaxy_config.galaxy.job_config_file }}"
  - src: templates/galaxy/config/oidc_config.xml.j2
    dest: "{{ galaxy_config.galaxy.oidc_config_file }}"
  - src: templates/galaxy/config/oidc_backends_config.xml.j2
    dest: "{{ galaxy_config.galaxy.oidc_backends_config_file }}"
  - src: templates/galaxy/config/pulsar_ls6_file_actions.yaml.j2
    dest: "{{ galaxy_config_dir }}/pulsar_ls6_file_actions.yaml"
  # TODO: add lint role to collection and use that
  - src: templates/galaxy/config/tpv/defaults.yaml.j2
    dest: "{{ tpv_config_dir }}/defaults.yaml"

galaxy_config_files:
  - src: files/galaxy/config/auth_conf.xml
    dest: "{{ galaxy_config.galaxy.auth_config_file }}"
  - src: files/galaxy/config/tool_conf.xml
    dest: "{{ galaxy_config.galaxy.tool_config_file }}"

# NGINX
nginx_conf_user: nginx
nginx_conf_group: "{{ galaxy_group }}"
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - galaxy
nginx_enable_default_server: false
#nginx_default_redirect_uri: "https://{{ galaxy_instance_hostname }}$request_uri"
nginx_conf_http:
  client_max_body_size: 10g
  proxy_read_timeout: 300
nginx_ssl_config_profile: modern
nginx_conf_ssl_certificate: "/etc/letsencrypt/live/{{ galaxy_instance_hostname }}/fullchain.pem"
nginx_conf_ssl_certificate_key: "/etc/letsencrypt/live/{{ galaxy_instance_hostname }}/privkey.pem"
nginx_conf_ssl_trusted_certificate: "/etc/letsencrypt/live/{{ galaxy_instance_hostname }}/fullchain.pem"

gxadmin_dir: "/opt/gxadmin"
gxadmin_bin_dir: "/usr/bin"
gxadmin_create_bin_dir: false
